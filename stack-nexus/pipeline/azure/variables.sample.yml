#
# Cloud Provider
#

# Azure access to use to run terraform.

#. azure_subscription_id (required): ((azure_admin.subscription_id))
#+ Azure subscription ID to use for Terraform.
azure_subscription_id: ((azure_admin.subscription_id))

#. azure_tenant_id (required): ((azure_admin.tenant_id))
#+ Azure tenant ID to use for Terraform.
azure_tenant_id: ((azure_admin.tenant_id))

#. azure_client_id (required): ((azure_admin.client_id))
#+ Azure client ID to use for Terraform.
azure_client_id: ((azure_admin.client_id))

#. azure_client_secret (required): ((azure_admin.client_secret))
#+ Azure client secret to use for Terraform.
azure_client_secret: ((azure_admin.client_secret))

#. azure_env (required): public
#+ Azure environment to use for Terraform. Can be either `public`, `usgovernment`, `german` or `china`.
azure_env: "public"

#. azure_location (required): West Europe
#+ Azure location to use for terraform. 
azure_location: "West Europe"


#
# Terraform remote state file
#

#. terraform_resource_group_name (required): ($ organization_canonical $)-terraform
#+ Azure Resource Group of the Storage Account to use to store terraform remote state file.
terraform_resource_group_name: ($ organization_canonical $)-terraform

#. terraform_storage_account_name (required): ((azure_storage_aks.account_name))
#+ Azure Storage Account name to use to store terraform remote state file.
terraform_storage_account_name: ((azure_storage_aks.account_name))

#. terraform_storage_account_key (required): ((azure_storage_aks.access_key))
#+ Azure Storage Account key to use to store terraform remote state file.
terraform_storage_access_key: ((azure_storage_aks.access_key))

#. terraform_storage_container_name (required): ($ organization_canonical $)
#+ Azure Storage container name to store terraform remote state file.
terraform_storage_container_name: ($ organization_canonical $)

#. terraform_storage_container_path (required): ($ project $)/($ environment $)
#+ Azure Storage container path to store terraform remote state file.
terraform_storage_container_path: ($ project $)/($ environment $)


#
# Keypair to use for newly created instances
#

#. keypair_public (required): ((custom_keypair.ssh_pub))
#+ The public SSH key to provision to bastion for external access through SSH
keypair_public: ((custom_keypair.ssh_pub))

#. keypair_private (required): ((custom_keypair.ssh_prv))
#+ The private SSH key allowing ansible to run playbooks in the Nexus Repository instance via bastion
keypair_private: ((custom_keypair.ssh_prv))


#
# Stack Configuration
#

#. config_git_repository (required): git@github.com:cycloidio/cycloid-stacks-test.git
#+ Git repository URL containing the config of the stack.
config_git_repository: git@github.com:cycloidio/cycloid-stacks-test.git

#. config_git_branch (required): config
#+ Branch to use on the config Git repository.
config_git_branch: config

#. config_git_private_key (required): ((git_github.ssh_key))
#+ SSH key pair to fetch the config Git repository.
config_git_private_key: ((git_github.ssh_key))

#. config_terraform_path (required): ($ project $)/terraform/aws/($ environment $)
#+ Path of Terraform files in the config git repository
config_terraform_path: ($ project $)/terraform/aws/($ environment $)

#. config_ansible_path (required): ($ project $)/ansible/environments
#+ Path of Ansible files in the config git repository
config_ansible_path: ($ project $)/ansible/environments

#. stack_git_repository (required): https://github.com/olivier2t/demo-stacks.git
#+ Git repository URL containing the stack.
stack_git_repository: https://github.com/olivier2t/demo-stacks.git

#. stack_git_branch (required): master
#+ Branch to use on the stack Git repository.
stack_git_branch: main

#. stack_terraform_path (required): stack-nexus/terraform/aws
#+ Path of Terraform files in the stack git repository
stack_terraform_path: stack-nexus/terraform/aws

#. stack_ansible_path (required): stack-nexus/ansible
#+ Path of Ansible files in the stack git repository
stack_ansible_path: stack-nexus/ansible


#
# VPC
#

#. cidr (required): '10.0.0.0/16'
#+ The CIDR of the VPC.
cidr: '10.0.0.0/16'

#. private_subnets (required): ['10.0.1.0/24']
#+ The private subnets for the VPC.
private_subnets: ['10.0.1.0/24']

#. public_subnets (required): ['10.0.0.0/24']
#+ The public subnets for the VPC.
public_subnets: ['10.0.0.0/24']


#
# Bastion
#

#. bastion_instance_type (required): Standard_DS1_v2
#+ Instance type for the bastion.
bastion_instance_type: Standard_DS1_v2

#. bastion_allowed_networks (required): ['0.0.0.0/0']
#+ Networks allowed to connect to the bastion using SSH.
bastion_allowed_networks: ['0.0.0.0/0']


#
# Nexus
#

#. nexus_instance_type (required): Standard_DS2_v2
#+ Instance type for the Nexus Repository.
nexus_instance_type: Standard_DS2_v2

#. nexus_disk_size (required): "20"
#+ Disk size for the Nexus Repository (Go).
nexus_disk_size: "20"

#. nexus_port (required): "8088"
#+ Port where Nexus Repository service is exposed.
nexus_port: "8088"

#. nexus_admin_password (required): changeme
#+ Initial admin password in case of first installation.
nexus_admin_password: changeme


#
# Default variables that shouldn't be changed except if needed
#

#. env (required): ($ environment $)
#+ Name of the project's environment.
env: ($ environment $)

#. project (required): ($ project $)
#+ Name of the project.
project: ($ project $)

#. customer (required): ($ organization_canonical $)
#+ Name of the Cycloid Organization, used as customer variable name.
customer: ($ organization_canonical $)

#. cycloid_api_url (required): https://http-api.cycloid.io
#+ Cycloid API URL.
cycloid_api_url: 'https://http-api.cycloid.io'

#. cycloid_api_key (required): ((custom_api-key-admin.key))
#+ API key to grant admin acess to Cycloid API.
cycloid_api_key: ((custom_api-key-admin.key))

#. slack_hook (required): ((raw_slack-hooks.demo_channel))
#+ URL to send notifications to cycloid-demo channel.
slack_hook: ((raw_slack-hooks.demo_channel))

#. terraform_version (required): '1.0.5'
#+ terraform version used to execute your code.
terraform_version: '1.0.5'

#. cycloid-toolkit ansible version (required): 'v2.7'
#+ cycloid-toolkit docker image tag to use (https://hub.docker.com/r/cycloid/cycloid-toolkit/tags).
ansible_version: 'v2.7'
